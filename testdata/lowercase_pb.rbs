# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: lowercase.proto

module Example
end

class Example::Lowercase
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  def self.decode: (String) -> Example::Lowercase

  def self.encode: (Example::Lowercase) -> String

  def self.decode_json: (String, untyped kw) -> Example::Lowercase

  def self.encode_json: (Example::Lowercase, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    example_proto_field: String?
  ) -> void


  def example_proto_field: () -> String

  def example_proto_field=: (String) -> void

  def clear_example_proto_field: () -> void

  def has_example_proto_field?: () -> Boolean

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Example::Lowercase_with_underscores
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  def self.decode: (String) -> Example::Lowercase_with_underscores

  def self.encode: (Example::Lowercase_with_underscores) -> String

  def self.decode_json: (String, untyped kw) -> Example::Lowercase_with_underscores

  def self.encode_json: (Example::Lowercase_with_underscores, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    example_proto_field: String?
  ) -> void


  def example_proto_field: () -> String

  def example_proto_field=: (String) -> void

  def clear_example_proto_field: () -> void

  def has_example_proto_field?: () -> Boolean

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end
